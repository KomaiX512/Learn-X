
> backend@0.1.0 dev
> ts-node-dev --respawn --transpile-only src/index.ts

[INFO] 23:37:24 ts-node-dev ver. 2.0.0 (using ts-node ver. 10.9.2, typescript ver. 5.9.2)

══════════════════════════════════════════════════════════════════════
🚀 LEARN-X BACKEND STARTING
══════════════════════════════════════════════════════════════════════
📍 Configuration:
   PORT: 8000
   FRONTEND_URLS: http://localhost:5173, http://localhost:5174
   REDIS_URL: redis://localhost:6379
   GEMINI_API_KEY: ✅ SET
   USE_VISUAL_VERSION: v3
   LOG_LEVEL: debug
══════════════════════════════════════════════════════════════════════

🔌 Connecting to Redis...
🎭 Initializing orchestrator...
🧹 Clearing stale job queues on startup...
2025-10-11T18:37:24.711Z [debug] NEW Plan worker created
2025-10-11T18:37:24.712Z [debug] NEW Gen worker created
2025-10-11T18:37:24.712Z [debug] NEW Parallel worker created
✅ Orchestrator initialized


══════════════════════════════════════════════════════════════════════
✅ SERVER READY
══════════════════════════════════════════════════════════════════════
🌐 Backend URL: http://localhost:8000
🔗 Health Check: http://localhost:8000/health
📡 WebSocket Ready: ws://localhost:8000
══════════════════════════════════════════════════════════════════════

2025-10-11T18:37:24.716Z [debug] Server listening on port 8000
✅ Redis connected
It is highly recommended to use a minimum Redis version of 6.2.0
             Current: 6.0.16
It is highly recommended to use a minimum Redis version of 6.2.0
             Current: 6.0.16
It is highly recommended to use a minimum Redis version of 6.2.0
             Current: 6.0.16
It is highly recommended to use a minimum Redis version of 6.2.0
             Current: 6.0.16
It is highly recommended to use a minimum Redis version of 6.2.0
             Current: 6.0.16
It is highly recommended to use a minimum Redis version of 6.2.0
             Current: 6.0.16
It is highly recommended to use a minimum Redis version of 6.2.0
             Current: 6.0.16
It is highly recommended to use a minimum Redis version of 6.2.0
             Current: 6.0.16
It is highly recommended to use a minimum Redis version of 6.2.0
             Current: 6.0.16
2025-10-11T18:38:05.555Z [debug] Received request on /api/query {"body":{"query":"blood circulation"}}
2025-10-11T18:38:05.555Z [debug] [api] Stored query for session 983cd4c7-7ab6-4635-b70b-4c5ed457472b: "blood circulation"
2025-10-11T18:38:05.555Z [debug] [orchestrator] Enqueuing plan for session 983cd4c7-7ab6-4635-b70b-4c5ed457472b
2025-10-11T18:38:05.556Z [debug] [orchestrator] Plan job added with id 12 for session 983cd4c7-7ab6-4635-b70b-4c5ed457472b

──────────────────────────────────────────────────────────────────────
📋 PLAN WORKER STARTED
──────────────────────────────────────────────────────────────────────
Session: 983cd4c7-7ab6-4635-b70b-4c5ed457472b
Query: blood circulation
Time: 2025-10-11T18:38:05.557Z
──────────────────────────────────────────────────────────────────────
2025-10-11T18:38:05.557Z [debug] [plan] START: session=983cd4c7-7ab6-4635-b70b-4c5ed457472b query=blood circulation
2025-10-11T18:38:05.557Z [debug] [monitor] Started tracking request 983cd4c7-7ab6-4635-b70b-4c5ed457472b
2025-10-11T18:38:05.558Z [debug] [cache] MISS - No cached plan for query: "blood circulation..."
2025-10-11T18:38:05.558Z [debug] [planner] Sending enhanced prompt to Gemini...
2025-10-11T18:38:05.569Z [debug] [timeout] Setting 120000ms timeout for planner/gemini
2025-10-11T18:38:05.589Z [debug] [socket] New connection: f5rAvpR3Q5uDCDMNAAAB
2025-10-11T18:38:05.590Z [debug] [socket] Socket f5rAvpR3Q5uDCDMNAAAB joined session 983cd4c7-7ab6-4635-b70b-4c5ed457472b
2025-10-11T18:38:05.590Z [debug] [socket] Socket f5rAvpR3Q5uDCDMNAAAB is now in rooms: f5rAvpR3Q5uDCDMNAAAB, 983cd4c7-7ab6-4635-b70b-4c5ed457472b
2025-10-11T18:38:21.595Z [debug] [planner] Received response from Gemini in 16037ms
2025-10-11T18:38:21.595Z [debug] [planner] JSON parsed successfully on first attempt
2025-10-11T18:38:21.595Z [debug] [monitor] Plan generation for 983cd4c7-7ab6-4635-b70b-4c5ed457472b took 16037ms
2025-10-11T18:38:21.596Z [debug] [cache] Cached plan for query: "blood circulation..."
=== NEW STRUCTURED PLAN ===
Session: 983cd4c7-7ab6-4635-b70b-4c5ed457472b
Query: blood circulation
Plan title: The Body's Inner Highway: Blood Circulation
Plan subtitle: You'll learn how your heart powers a vital nutrient delivery and waste removal system throughout your body.
Plan toc: [
  {
    minute: 1,
    title: 'The Intuition',
    summary: 'Imagine your body as a bustling city needing constant supplies and waste removal.'
  },
  {
    minute: 2,
    title: 'How It Works',
    summary: "Discover the heart's powerful pump and the network of vessels that form two crucial loops."
  },
  {
    minute: 3,
    title: 'Real Applications',
    summary: 'Understand why healthy circulation is key to preventing disease and feeling energetic.'
  }
]
Plan steps count: 3
Step 0: id=1, tag=intuition, desc="Imagine you're running, your muscles burning. Where does the energy come from? Think of your body as a massive city. Every cell, from your brain to your toes, is a tiny house needing a constant delivery of fresh groceries (oxygen, nutrients) and a reliable trash collection service (removing CO2 and waste). Without this continuous supply chain, the city would quickly grind to a halt. That's exactly what your blood circulation system does, non-stop, every second of your life."
Step 1: id=2, tag=mechanics, desc="At the center of this incredible system is your heart, a powerful, fist-sized muscular pump. It tirelessly pushes blood through an intricate network of vessels:
1.  **Arteries:** Bright red, oxygen-rich blood *leaves* the heart, traveling through thick, elastic arteries to deliver oxygen and nutrients to every single cell.
2.  **Capillaries:** These microscopic vessels are where the magic happens – oxygen and nutrients jump off to the cells, and carbon dioxide and waste jump into the blood.
3.  **Veins:** Darker, oxygen-poor blood, now laden with waste, returns to the heart through veins. The heart then sends this 'used' blood to the lungs to pick up fresh oxygen, creating a continuous, efficient loop – a systemic loop for the body and a pulmonary loop for the lungs."
Step 2: id=3, tag=applications, desc="This vital internal highway directly impacts your health and energy. Regular exercise strengthens your heart, making it a more efficient pump. A diet rich in nutrients keeps your blood vessels clear, like open roads, ensuring smooth deliveries. Problems like high blood pressure or blockages (e.g., from plaque buildup) can be like traffic jams, starving parts of your body of essential supplies, potentially leading to serious issues like heart attacks or strokes. Understanding circulation empowers you to make choices that keep your body's internal city thriving!"
=== END NEW STRUCTURED PLAN ===
2025-10-11T18:38:21.596Z [debug] [plan] OK: session=983cd4c7-7ab6-4635-b70b-4c5ed457472b plan received with 3 steps
2025-10-11T18:38:21.597Z [debug] [plan] Enqueuing PARALLEL generation of all 3 steps
2025-10-11T18:38:21.598Z [debug] [plan] END: session=983cd4c7-7ab6-4635-b70b-4c5ed457472b

====================================================================================================
🔥 PARALLEL WORKER CALLED
====================================================================================================
Job ID: 12
Job name: parallel-generate
Job data keys: [ 'plan', 'sessionId', 'query' ]
====================================================================================================


──────────────────────────────────────────────────────────────────────
⚡ PARALLEL WORKER STARTED
──────────────────────────────────────────────────────────────────────
Session: 983cd4c7-7ab6-4635-b70b-4c5ed457472b
Query: blood circulation
Steps to generate: 3
Time: 2025-10-11T18:38:21.599Z
──────────────────────────────────────────────────────────────────────
2025-10-11T18:38:21.599Z [info] [parallel] ⚡ STARTING parallel generation for 3 steps (session: 983cd4c7-7ab6-4635-b70b-4c5ed457472b)
2025-10-11T18:38:21.599Z [info] [parallel] ⏸️  Staggering 5000ms before step 2 to avoid rate limits
2025-10-11T18:38:21.600Z [debug] [cache] MISS - No cached chunk for step 1
2025-10-11T18:38:21.600Z [info] [parallel] 🚀 Step 1: Using v3 TRUE GENERATION
2025-10-11T18:38:21.600Z [info] [codegenV3WithRetry] Attempt 1/2 for step 1
2025-10-11T18:38:21.600Z [info] [codegenV3] Generating step 1: Imagine you're running, your muscles burning. Where does the energy come from? Think of your body as a massive city. Every cell, from your brain to your toes, is a tiny house needing a constant delivery of fresh groceries (oxygen, nutrients) and a reliable trash collection service (removing CO2 and waste). Without this continuous supply chain, the city would quickly grind to a halt. That's exactly what your blood circulation system does, non-stop, every second of your life.
2025-10-11T18:38:21.600Z [info] [codegenV3] Topic: "blood circulation"
2025-10-11T18:38:21.600Z [debug] [codegenV3] Prompt length: 1285 chars
2025-10-11T18:38:24.712Z [debug] [monitor] Metrics updated:
2025-10-11T18:38:26.602Z [info] [parallel] ⏸️  Staggering 5000ms before step 3 to avoid rate limits
2025-10-11T18:38:26.602Z [debug] [cache] MISS - No cached chunk for step 2
2025-10-11T18:38:26.602Z [info] [parallel] 🚀 Step 2: Using v3 TRUE GENERATION
2025-10-11T18:38:26.602Z [info] [codegenV3WithRetry] Attempt 1/2 for step 2
2025-10-11T18:38:26.603Z [info] [codegenV3] Generating step 2: At the center of this incredible system is your heart, a powerful, fist-sized muscular pump. It tirelessly pushes blood through an intricate network of vessels:
1.  **Arteries:** Bright red, oxygen-rich blood *leaves* the heart, traveling through thick, elastic arteries to deliver oxygen and nutrients to every single cell.
2.  **Capillaries:** These microscopic vessels are where the magic happens – oxygen and nutrients jump off to the cells, and carbon dioxide and waste jump into the blood.
3.  **Veins:** Darker, oxygen-poor blood, now laden with waste, returns to the heart through veins. The heart then sends this 'used' blood to the lungs to pick up fresh oxygen, creating a continuous, efficient loop – a systemic loop for the body and a pulmonary loop for the lungs.
2025-10-11T18:38:26.603Z [info] [codegenV3] Topic: "blood circulation"
2025-10-11T18:38:26.603Z [debug] [codegenV3] Prompt length: 1584 chars
2025-10-11T18:38:31.605Z [debug] [cache] MISS - No cached chunk for step 3
2025-10-11T18:38:31.606Z [info] [parallel] 🚀 Step 3: Using v3 TRUE GENERATION
2025-10-11T18:38:31.606Z [info] [codegenV3WithRetry] Attempt 1/2 for step 3
2025-10-11T18:38:31.606Z [info] [codegenV3] Generating step 3: This vital internal highway directly impacts your health and energy. Regular exercise strengthens your heart, making it a more efficient pump. A diet rich in nutrients keeps your blood vessels clear, like open roads, ensuring smooth deliveries. Problems like high blood pressure or blockages (e.g., from plaque buildup) can be like traffic jams, starving parts of your body of essential supplies, potentially leading to serious issues like heart attacks or strokes. Understanding circulation empowers you to make choices that keep your body's internal city thriving!
2025-10-11T18:38:31.606Z [info] [codegenV3] Topic: "blood circulation"
2025-10-11T18:38:31.606Z [debug] [codegenV3] Prompt length: 1373 chars
2025-10-11T18:39:24.715Z [debug] [monitor] Metrics updated:
2025-10-11T18:39:32.544Z [debug] [codegenV3] Received 6705 chars from API
2025-10-11T18:39:32.545Z [info] [codegenV3] ✅ Generated SVG in 60.94s (6705 chars)
2025-10-11T18:39:32.545Z [info] [codegenV3] 🎬 ANIMATIONS: 32 total (<animate>: 16, <animateMotion>: 14, <animateTransform>: 2)
2025-10-11T18:39:32.545Z [info] [codegenV3] 📊 CONTENT: labels=11, shapes=23
2025-10-11T18:39:32.545Z [info] [codegenV3] ✅ ANIMATIONS PRESENT - Quality check passed
2025-10-11T18:39:32.545Z [info] [codegenV3WithRetry] ✅ SUCCESS (1 actions)
2025-10-11T18:39:32.545Z [debug] compilerRouter: routing to js
2025-10-11T18:39:32.545Z [debug] [debugger] START: Received chunk for stepId=3
2025-10-11T18:39:32.545Z [debug] [debugger] Chunk type: actions
2025-10-11T18:39:32.545Z [debug] [debugger] Has actions: true
2025-10-11T18:39:32.545Z [debug] [debugger] Actions count: 1
2025-10-11T18:39:32.545Z [debug] [debugger] Chunk is valid with 1 actions, allowing all for rich visualizations
2025-10-11T18:39:32.545Z [debug] [cache] Cached chunk for query step 3
2025-10-11T18:39:32.545Z [debug] [monitor] Step 3 generation for 983cd4c7-7ab6-4635-b70b-4c5ed457472b took 60940ms
2025-10-11T18:39:32.545Z [info] [parallel] ✅ Step 3 COMPLETE in 60940ms with 1 actions

══════════════════════════════════════════════════════════════════════
🚀 ABOUT TO EMIT STEP
══════════════════════════════════════════════════════════════════════
SessionId: 983cd4c7-7ab6-4635-b70b-4c5ed457472b
StepId: 3
Actions: 1
Room sockets: 1
══════════════════════════════════════════════════════════════════════
✅ EMITTED SUCCESSFULLY

2025-10-11T18:39:32.546Z [info] [parallel] 🚀 IMMEDIATELY EMITTED step 3 to frontend (1 sockets)
2025-10-11T18:39:33.674Z [debug] [codegenV3] Received 5767 chars from API
2025-10-11T18:39:33.674Z [info] [codegenV3] ✅ Generated SVG in 72.07s (5767 chars)
2025-10-11T18:39:33.674Z [info] [codegenV3] 🎬 ANIMATIONS: 33 total (<animate>: 17, <animateMotion>: 16, <animateTransform>: 0)
2025-10-11T18:39:33.675Z [info] [codegenV3] 📊 CONTENT: labels=16, shapes=9
2025-10-11T18:39:33.675Z [info] [codegenV3] ✅ ANIMATIONS PRESENT - Quality check passed
2025-10-11T18:39:33.675Z [info] [codegenV3] Reference saved to: /tmp/debug-step1-WITH-ANIMATIONS.svg
2025-10-11T18:39:33.675Z [info] [codegenV3WithRetry] ✅ SUCCESS (1 actions)
2025-10-11T18:39:33.675Z [debug] compilerRouter: routing to js
2025-10-11T18:39:33.675Z [debug] [debugger] START: Received chunk for stepId=1
2025-10-11T18:39:33.675Z [debug] [debugger] Chunk type: actions
2025-10-11T18:39:33.675Z [debug] [debugger] Has actions: true
2025-10-11T18:39:33.675Z [debug] [debugger] Actions count: 1
2025-10-11T18:39:33.675Z [debug] [debugger] Chunk is valid with 1 actions, allowing all for rich visualizations
2025-10-11T18:39:33.676Z [debug] [cache] Cached chunk for query step 1
2025-10-11T18:39:33.676Z [debug] [monitor] Step 1 generation for 983cd4c7-7ab6-4635-b70b-4c5ed457472b took 72077ms
2025-10-11T18:39:33.676Z [info] [parallel] ✅ Step 1 COMPLETE in 72077ms with 1 actions

══════════════════════════════════════════════════════════════════════
🚀 ABOUT TO EMIT STEP
══════════════════════════════════════════════════════════════════════
SessionId: 983cd4c7-7ab6-4635-b70b-4c5ed457472b
StepId: 1
Actions: 1
Room sockets: 1
══════════════════════════════════════════════════════════════════════
✅ EMITTED SUCCESSFULLY

2025-10-11T18:39:33.676Z [info] [parallel] 🚀 IMMEDIATELY EMITTED step 1 to frontend (1 sockets)
2025-10-11T18:39:48.240Z [debug] [codegenV3] Received 7005 chars from API
2025-10-11T18:39:48.240Z [info] [codegenV3] ✅ Generated SVG in 81.64s (7005 chars)
2025-10-11T18:39:48.240Z [info] [codegenV3] 🎬 ANIMATIONS: 48 total (<animate>: 24, <animateMotion>: 24, <animateTransform>: 0)
2025-10-11T18:39:48.240Z [info] [codegenV3] 📊 CONTENT: labels=17, shapes=10
2025-10-11T18:39:48.240Z [info] [codegenV3] ✅ ANIMATIONS PRESENT - Quality check passed
2025-10-11T18:39:48.240Z [info] [codegenV3WithRetry] ✅ SUCCESS (1 actions)
2025-10-11T18:39:48.240Z [debug] compilerRouter: routing to js
2025-10-11T18:39:48.240Z [debug] [debugger] START: Received chunk for stepId=2
2025-10-11T18:39:48.240Z [debug] [debugger] Chunk type: actions
2025-10-11T18:39:48.240Z [debug] [debugger] Has actions: true
2025-10-11T18:39:48.240Z [debug] [debugger] Actions count: 1
2025-10-11T18:39:48.240Z [debug] [debugger] Chunk is valid with 1 actions, allowing all for rich visualizations
2025-10-11T18:39:48.241Z [debug] [cache] Cached chunk for query step 2
2025-10-11T18:39:48.241Z [debug] [monitor] Step 2 generation for 983cd4c7-7ab6-4635-b70b-4c5ed457472b took 81639ms
2025-10-11T18:39:48.241Z [info] [parallel] ✅ Step 2 COMPLETE in 81639ms with 1 actions

══════════════════════════════════════════════════════════════════════
🚀 ABOUT TO EMIT STEP
══════════════════════════════════════════════════════════════════════
SessionId: 983cd4c7-7ab6-4635-b70b-4c5ed457472b
StepId: 2
Actions: 1
Room sockets: 1
══════════════════════════════════════════════════════════════════════
✅ EMITTED SUCCESSFULLY

2025-10-11T18:39:48.241Z [info] [parallel] 🚀 IMMEDIATELY EMITTED step 2 to frontend (1 sockets)
2025-10-11T18:39:48.241Z [debug] [parallel] Parallel generation complete: 3/3 successful in 86642ms
2025-10-11T18:39:48.241Z [debug] [monitor] Completed request 983cd4c7-7ab6-4635-b70b-4c5ed457472b in 102684ms (success: true)
2025-10-11T18:39:48.241Z [debug] [parallel] Job complete for session 983cd4c7-7ab6-4635-b70b-4c5ed457472b
2025-10-11T18:39:50.252Z [debug] [socket] Socket f5rAvpR3Q5uDCDMNAAAB disconnected: client namespace disconnect
2025-10-11T18:40:24.722Z [debug] [monitor] Metrics updated:
2025-10-11T18:40:42.600Z [debug] Received request on /api/query {"body":{"query":"quantum entanglement"}}
2025-10-11T18:40:42.601Z [debug] [api] Stored query for session 92e3ff70-0a7f-4c81-8279-46a53f711fed: "quantum entanglement"
2025-10-11T18:40:42.601Z [debug] [orchestrator] Enqueuing plan for session 92e3ff70-0a7f-4c81-8279-46a53f711fed
2025-10-11T18:40:42.601Z [debug] [orchestrator] Plan job added with id 13 for session 92e3ff70-0a7f-4c81-8279-46a53f711fed

──────────────────────────────────────────────────────────────────────
📋 PLAN WORKER STARTED
──────────────────────────────────────────────────────────────────────
Session: 92e3ff70-0a7f-4c81-8279-46a53f711fed
Query: quantum entanglement
Time: 2025-10-11T18:40:42.602Z
──────────────────────────────────────────────────────────────────────
2025-10-11T18:40:42.602Z [debug] [plan] START: session=92e3ff70-0a7f-4c81-8279-46a53f711fed query=quantum entanglement
2025-10-11T18:40:42.602Z [debug] [monitor] Started tracking request 92e3ff70-0a7f-4c81-8279-46a53f711fed
2025-10-11T18:40:42.602Z [debug] [cache] MISS - No cached plan for query: "quantum entanglement..."
2025-10-11T18:40:42.602Z [debug] [planner] Sending enhanced prompt to Gemini...
2025-10-11T18:40:42.603Z [debug] [timeout] Setting 120000ms timeout for planner/gemini
2025-10-11T18:40:42.612Z [debug] [socket] New connection: 4PYV7Xp6KEvrLnaSAAAD
2025-10-11T18:40:42.613Z [debug] [socket] Socket 4PYV7Xp6KEvrLnaSAAAD joined session 92e3ff70-0a7f-4c81-8279-46a53f711fed
2025-10-11T18:40:42.613Z [debug] [socket] Socket 4PYV7Xp6KEvrLnaSAAAD is now in rooms: 4PYV7Xp6KEvrLnaSAAAD, 92e3ff70-0a7f-4c81-8279-46a53f711fed
2025-10-11T18:41:03.967Z [debug] [planner] Received response from Gemini in 21365ms
2025-10-11T18:41:03.967Z [debug] [planner] JSON parsed successfully on first attempt
2025-10-11T18:41:03.967Z [debug] [monitor] Plan generation for 92e3ff70-0a7f-4c81-8279-46a53f711fed took 21365ms
2025-10-11T18:41:03.967Z [debug] [cache] Cached plan for query: "quantum entanglement..."
=== NEW STRUCTURED PLAN ===
Session: 92e3ff70-0a7f-4c81-8279-46a53f711fed
Query: quantum entanglement
Plan title: Quantum Entanglement: The Spooky Connection
Plan subtitle: Discover how two particles can be inextricably linked, no matter the distance, and why this 'spooky action' is a cornerstone of future technology.
Plan toc: [
  {
    minute: 1,
    title: 'The Intuition',
    summary: 'Two particles sharing an instant, unshakeable link.'
  },
  {
    minute: 2,
    title: 'How It Works',
    summary: 'Particles in superposition, collapsing into correlated states upon measurement.'
  },
  {
    minute: 3,
    title: 'Real Applications',
    summary: 'Powering quantum computers, secure communication, and more.'
  }
]
Plan steps count: 3
Step 0: id=1, tag=intuition, desc="Imagine you have two perfectly synchronized coins. You flip them, but don't look. You send one to Mars and keep the other. The moment you look at your coin and see 'Heads,' you *instantly* know the coin on Mars is 'Tails,' and vice-versa. There was no communication, yet their fates were linked from the start. This 'spooky action at a distance,' as Einstein called it, is the essence of quantum entanglement: two particles sharing an unbreakable, instantaneous connection, no matter how far apart."
Step 1: id=2, tag=mechanics, desc="How does this work? Imagine creating two electrons from a single decay event. Their spins must always add up to zero. Before measurement, each electron is in a **superposition** – it's simultaneously both 'spin-up' and 'spin-down' until observed. The moment you measure Electron A and find it 'spin-up,' its quantum state **collapses**, and *instantaneously*, Electron B's state also collapses to 'spin-down,' fulfilling their correlated link. This isn't about sending a signal; it's about two particles having a pre-determined, shared probability space that resolves the moment one is observed."
Step 2: id=3, tag=applications, desc="Quantum entanglement isn't just a curiosity; it's the engine for revolutionary technologies. It's the core principle behind **quantum computing**, where entangled 'qubits' can perform calculations far beyond classical computers, solving complex problems. It enables **quantum cryptography (QKD)**, creating truly unhackable communication channels because any attempt to 'eavesdrop' on entangled particles instantly breaks their link, alerting users. It even paves the way for **quantum internet** and super-sensitive **quantum sensors**, promising a future of secure, powerful, and precise technological advancements."
=== END NEW STRUCTURED PLAN ===
2025-10-11T18:41:03.967Z [debug] [plan] OK: session=92e3ff70-0a7f-4c81-8279-46a53f711fed plan received with 3 steps
2025-10-11T18:41:03.967Z [debug] [plan] Enqueuing PARALLEL generation of all 3 steps
2025-10-11T18:41:03.968Z [debug] [plan] END: session=92e3ff70-0a7f-4c81-8279-46a53f711fed

====================================================================================================
🔥 PARALLEL WORKER CALLED
====================================================================================================
Job ID: 13
Job name: parallel-generate
Job data keys: [ 'plan', 'sessionId', 'query' ]
====================================================================================================


──────────────────────────────────────────────────────────────────────
⚡ PARALLEL WORKER STARTED
──────────────────────────────────────────────────────────────────────
Session: 92e3ff70-0a7f-4c81-8279-46a53f711fed
Query: quantum entanglement
Steps to generate: 3
Time: 2025-10-11T18:41:03.968Z
──────────────────────────────────────────────────────────────────────
2025-10-11T18:41:03.968Z [info] [parallel] ⚡ STARTING parallel generation for 3 steps (session: 92e3ff70-0a7f-4c81-8279-46a53f711fed)
2025-10-11T18:41:03.968Z [info] [parallel] ⏸️  Staggering 5000ms before step 2 to avoid rate limits
2025-10-11T18:41:03.969Z [debug] [cache] MISS - No cached chunk for step 1
2025-10-11T18:41:03.969Z [info] [parallel] 🚀 Step 1: Using v3 TRUE GENERATION
2025-10-11T18:41:03.969Z [info] [codegenV3WithRetry] Attempt 1/2 for step 1
2025-10-11T18:41:03.969Z [info] [codegenV3] Generating step 1: Imagine you have two perfectly synchronized coins. You flip them, but don't look. You send one to Mars and keep the other. The moment you look at your coin and see 'Heads,' you *instantly* know the coin on Mars is 'Tails,' and vice-versa. There was no communication, yet their fates were linked from the start. This 'spooky action at a distance,' as Einstein called it, is the essence of quantum entanglement: two particles sharing an unbreakable, instantaneous connection, no matter how far apart.
2025-10-11T18:41:03.969Z [info] [codegenV3] Topic: "quantum entanglement"
2025-10-11T18:41:03.969Z [debug] [codegenV3] Prompt length: 1308 chars
2025-10-11T18:41:08.970Z [info] [parallel] ⏸️  Staggering 5000ms before step 3 to avoid rate limits
2025-10-11T18:41:08.970Z [debug] [cache] MISS - No cached chunk for step 2
2025-10-11T18:41:08.970Z [info] [parallel] 🚀 Step 2: Using v3 TRUE GENERATION
2025-10-11T18:41:08.970Z [info] [codegenV3WithRetry] Attempt 1/2 for step 2
2025-10-11T18:41:08.971Z [info] [codegenV3] Generating step 2: How does this work? Imagine creating two electrons from a single decay event. Their spins must always add up to zero. Before measurement, each electron is in a **superposition** – it's simultaneously both 'spin-up' and 'spin-down' until observed. The moment you measure Electron A and find it 'spin-up,' its quantum state **collapses**, and *instantaneously*, Electron B's state also collapses to 'spin-down,' fulfilling their correlated link. This isn't about sending a signal; it's about two particles having a pre-determined, shared probability space that resolves the moment one is observed.
2025-10-11T18:41:08.971Z [info] [codegenV3] Topic: "quantum entanglement"
2025-10-11T18:41:08.971Z [debug] [codegenV3] Prompt length: 1405 chars
2025-10-11T18:41:13.972Z [debug] [cache] MISS - No cached chunk for step 3
2025-10-11T18:41:13.973Z [info] [parallel] 🚀 Step 3: Using v3 TRUE GENERATION
2025-10-11T18:41:13.973Z [info] [codegenV3WithRetry] Attempt 1/2 for step 3
2025-10-11T18:41:13.973Z [info] [codegenV3] Generating step 3: Quantum entanglement isn't just a curiosity; it's the engine for revolutionary technologies. It's the core principle behind **quantum computing**, where entangled 'qubits' can perform calculations far beyond classical computers, solving complex problems. It enables **quantum cryptography (QKD)**, creating truly unhackable communication channels because any attempt to 'eavesdrop' on entangled particles instantly breaks their link, alerting users. It even paves the way for **quantum internet** and super-sensitive **quantum sensors**, promising a future of secure, powerful, and precise technological advancements.
2025-10-11T18:41:13.973Z [info] [codegenV3] Topic: "quantum entanglement"
2025-10-11T18:41:13.973Z [debug] [codegenV3] Prompt length: 1427 chars
2025-10-11T18:41:24.723Z [debug] [monitor] Metrics updated:
2025-10-11T18:42:10.621Z [debug] [codegenV3] Received 6823 chars from API
2025-10-11T18:42:10.622Z [info] [codegenV3] ✅ Generated SVG in 66.65s (6823 chars)
2025-10-11T18:42:10.622Z [info] [codegenV3] 🎬 ANIMATIONS: 25 total (<animate>: 23, <animateMotion>: 0, <animateTransform>: 2)
2025-10-11T18:42:10.622Z [info] [codegenV3] 📊 CONTENT: labels=13, shapes=8
2025-10-11T18:42:10.622Z [info] [codegenV3] ✅ ANIMATIONS PRESENT - Quality check passed
2025-10-11T18:42:10.622Z [info] [codegenV3] Reference saved to: /tmp/debug-step1-WITH-ANIMATIONS.svg
2025-10-11T18:42:10.622Z [info] [codegenV3WithRetry] ✅ SUCCESS (1 actions)
2025-10-11T18:42:10.622Z [debug] compilerRouter: routing to js
2025-10-11T18:42:10.622Z [debug] [debugger] START: Received chunk for stepId=1
2025-10-11T18:42:10.622Z [debug] [debugger] Chunk type: actions
2025-10-11T18:42:10.622Z [debug] [debugger] Has actions: true
2025-10-11T18:42:10.622Z [debug] [debugger] Actions count: 1
2025-10-11T18:42:10.622Z [debug] [debugger] Chunk is valid with 1 actions, allowing all for rich visualizations
2025-10-11T18:42:10.623Z [debug] [cache] Cached chunk for query step 1
2025-10-11T18:42:10.623Z [debug] [monitor] Step 1 generation for 92e3ff70-0a7f-4c81-8279-46a53f711fed took 66655ms
2025-10-11T18:42:10.623Z [info] [parallel] ✅ Step 1 COMPLETE in 66655ms with 1 actions

══════════════════════════════════════════════════════════════════════
🚀 ABOUT TO EMIT STEP
══════════════════════════════════════════════════════════════════════
SessionId: 92e3ff70-0a7f-4c81-8279-46a53f711fed
StepId: 1
Actions: 1
Room sockets: 1
══════════════════════════════════════════════════════════════════════
✅ EMITTED SUCCESSFULLY

2025-10-11T18:42:10.623Z [info] [parallel] 🚀 IMMEDIATELY EMITTED step 1 to frontend (1 sockets)
2025-10-11T18:42:21.993Z [debug] [codegenV3] Received 5150 chars from API
2025-10-11T18:42:21.993Z [info] [codegenV3] ✅ Generated SVG in 73.02s (5150 chars)
2025-10-11T18:42:21.993Z [info] [codegenV3] 🎬 ANIMATIONS: 17 total (<animate>: 11, <animateMotion>: 2, <animateTransform>: 4)
2025-10-11T18:42:21.993Z [info] [codegenV3] 📊 CONTENT: labels=8, shapes=7
2025-10-11T18:42:21.994Z [info] [codegenV3] ✅ ANIMATIONS PRESENT - Quality check passed
2025-10-11T18:42:21.994Z [info] [codegenV3WithRetry] ✅ SUCCESS (1 actions)
2025-10-11T18:42:21.994Z [debug] compilerRouter: routing to js
2025-10-11T18:42:21.994Z [debug] [debugger] START: Received chunk for stepId=2
2025-10-11T18:42:21.994Z [debug] [debugger] Chunk type: actions
2025-10-11T18:42:21.994Z [debug] [debugger] Has actions: true
2025-10-11T18:42:21.994Z [debug] [debugger] Actions count: 1
2025-10-11T18:42:21.994Z [debug] [debugger] Chunk is valid with 1 actions, allowing all for rich visualizations
2025-10-11T18:42:21.994Z [debug] [cache] Cached chunk for query step 2
2025-10-11T18:42:21.994Z [debug] [monitor] Step 2 generation for 92e3ff70-0a7f-4c81-8279-46a53f711fed took 73024ms
2025-10-11T18:42:21.994Z [info] [parallel] ✅ Step 2 COMPLETE in 73024ms with 1 actions

══════════════════════════════════════════════════════════════════════
🚀 ABOUT TO EMIT STEP
══════════════════════════════════════════════════════════════════════
SessionId: 92e3ff70-0a7f-4c81-8279-46a53f711fed
StepId: 2
Actions: 1
Room sockets: 1
══════════════════════════════════════════════════════════════════════
✅ EMITTED SUCCESSFULLY

2025-10-11T18:42:21.994Z [info] [parallel] 🚀 IMMEDIATELY EMITTED step 2 to frontend (1 sockets)
2025-10-11T18:42:24.723Z [debug] [monitor] Metrics updated:
2025-10-11T18:42:40.155Z [debug] [codegenV3] Received 4824 chars from API
2025-10-11T18:42:40.156Z [error] [codegenV3] ❌ NO SVG STRUCTURE FOUND
2025-10-11T18:42:40.156Z [error] [codegenV3] Content received:
2025-10-11T18:42:40.156Z [error] <?xml version="1.0"?>
<svg width="800" height="600" viewBox="0 0 800 600" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <style>
      .bg { fill: #f0f8ff; }
      .qubit { stroke: #0056b3; stroke-width: 2; fill: #007bff; }
      .label { font-family: sans-serif; font-size: 16px; fill: #333; }
      .concept-label { font-family: sans-serif; font-size: 24px; font-weight: bold; fill: #000; }
      .box { stroke-width: 2; rx: 10; ry: 10; }
      .link { stroke: #888; stroke-width: 2; stroke-dasharray: 5,5; }
    </style>
  </defs>

  <rect x="0" y="0" width="800" height="600" class="bg"/>
  <text x="400" y="40" text-anchor="middle" class="concept-label" font-size="28">Quantum Entanglement: The Future's Engine</text>

  <!-- Scene 1: Core Entanglement Concept -->
  <g id="s1" opacity="1">
    <animate id="s1-fadeout" attributeName="opacity" from="1" to="0" begin="s1-qubitA-anim2.end+2s" dur="1s" fill="freeze"/>
    <text x="400" y="80" text-anchor="middle" class="concept-label">1. The Co
2025-10-11T18:42:40.156Z [error] [codegenV3] Generation failed: Generated content has no valid SVG structure
2025-10-11T18:42:40.156Z [warn] [codegenV3WithRetry] ⚠️ Null result, retrying...
2025-10-11T18:42:40.156Z [info] [codegenV3WithRetry] Waiting 3000ms before retry...
2025-10-11T18:42:43.157Z [info] [codegenV3WithRetry] Attempt 2/2 for step 3
2025-10-11T18:42:43.157Z [info] [codegenV3] Generating step 3: Quantum entanglement isn't just a curiosity; it's the engine for revolutionary technologies. It's the core principle behind **quantum computing**, where entangled 'qubits' can perform calculations far beyond classical computers, solving complex problems. It enables **quantum cryptography (QKD)**, creating truly unhackable communication channels because any attempt to 'eavesdrop' on entangled particles instantly breaks their link, alerting users. It even paves the way for **quantum internet** and super-sensitive **quantum sensors**, promising a future of secure, powerful, and precise technological advancements.
2025-10-11T18:42:43.157Z [info] [codegenV3] Topic: "quantum entanglement"
2025-10-11T18:42:43.157Z [debug] [codegenV3] Prompt length: 1427 chars
2025-10-11T18:43:18.354Z [debug] [codegenV3] Received 6772 chars from API
2025-10-11T18:43:18.354Z [info] [codegenV3] ✅ Generated SVG in 35.20s (6772 chars)
2025-10-11T18:43:18.354Z [info] [codegenV3] 🎬 ANIMATIONS: 21 total (<animate>: 15, <animateMotion>: 6, <animateTransform>: 0)
2025-10-11T18:43:18.354Z [info] [codegenV3] 📊 CONTENT: labels=22, shapes=13
2025-10-11T18:43:18.354Z [info] [codegenV3] ✅ ANIMATIONS PRESENT - Quality check passed
2025-10-11T18:43:18.354Z [info] [codegenV3WithRetry] ✅ SUCCESS (1 actions)
2025-10-11T18:43:18.354Z [debug] compilerRouter: routing to js
2025-10-11T18:43:18.354Z [debug] [debugger] START: Received chunk for stepId=3
2025-10-11T18:43:18.354Z [debug] [debugger] Chunk type: actions
2025-10-11T18:43:18.354Z [debug] [debugger] Has actions: true
2025-10-11T18:43:18.354Z [debug] [debugger] Actions count: 1
2025-10-11T18:43:18.354Z [debug] [debugger] Chunk is valid with 1 actions, allowing all for rich visualizations
2025-10-11T18:43:18.354Z [debug] [cache] Cached chunk for query step 3
2025-10-11T18:43:18.355Z [debug] [monitor] Step 3 generation for 92e3ff70-0a7f-4c81-8279-46a53f711fed took 124383ms
2025-10-11T18:43:18.355Z [info] [parallel] ✅ Step 3 COMPLETE in 124383ms with 1 actions

══════════════════════════════════════════════════════════════════════
🚀 ABOUT TO EMIT STEP
══════════════════════════════════════════════════════════════════════
SessionId: 92e3ff70-0a7f-4c81-8279-46a53f711fed
StepId: 3
Actions: 1
Room sockets: 1
══════════════════════════════════════════════════════════════════════
✅ EMITTED SUCCESSFULLY

2025-10-11T18:43:18.355Z [info] [parallel] 🚀 IMMEDIATELY EMITTED step 3 to frontend (1 sockets)
2025-10-11T18:43:18.355Z [debug] [parallel] Parallel generation complete: 3/3 successful in 134387ms
2025-10-11T18:43:18.355Z [debug] [monitor] Completed request 92e3ff70-0a7f-4c81-8279-46a53f711fed in 155753ms (success: true)
2025-10-11T18:43:18.355Z [debug] [parallel] Job complete for session 92e3ff70-0a7f-4c81-8279-46a53f711fed
2025-10-11T18:43:20.366Z [debug] [socket] Socket 4PYV7Xp6KEvrLnaSAAAD disconnected: client namespace disconnect
2025-10-11T18:43:24.724Z [debug] [monitor] Metrics updated:
2025-10-11T18:44:24.733Z [debug] [monitor] Metrics updated:
2025-10-11T18:45:24.734Z [debug] [monitor] Metrics updated:
2025-10-11T18:46:24.739Z [debug] [monitor] Metrics updated:
2025-10-11T18:47:24.745Z [debug] [monitor] Metrics updated:
2025-10-11T18:48:24.748Z [debug] [monitor] Metrics updated:
2025-10-11T18:49:24.750Z [debug] [monitor] Metrics updated:
2025-10-11T18:50:24.751Z [debug] [monitor] Metrics updated:
2025-10-11T18:51:24.755Z [debug] [monitor] Metrics updated:
2025-10-11T18:52:24.758Z [debug] [monitor] Metrics updated:
2025-10-11T18:53:24.759Z [debug] [monitor] Metrics updated:
2025-10-11T18:54:24.762Z [debug] [monitor] Metrics updated:
2025-10-11T18:55:24.764Z [debug] [monitor] Metrics updated:
2025-10-11T18:56:24.765Z [debug] [monitor] Metrics updated:
2025-10-11T18:57:24.768Z [debug] [monitor] Metrics updated:
2025-10-11T18:58:24.771Z [debug] [monitor] Metrics updated:
2025-10-11T18:59:24.772Z [debug] [monitor] Metrics updated:
2025-10-11T19:00:24.783Z [debug] [monitor] Metrics updated:
2025-10-11T19:01:24.792Z [debug] [monitor] Metrics updated:
2025-10-11T19:02:24.800Z [debug] [monitor] Metrics updated:
2025-10-11T19:03:24.806Z [debug] [monitor] Metrics updated:
2025-10-11T19:04:24.811Z [debug] [monitor] Metrics updated:
2025-10-11T19:05:24.814Z [debug] [monitor] Metrics updated:
2025-10-11T19:06:24.816Z [debug] [monitor] Metrics updated:
2025-10-11T19:07:24.817Z [debug] [monitor] Metrics updated:
2025-10-11T19:08:24.821Z [debug] [monitor] Metrics updated:
2025-10-11T19:09:24.824Z [debug] [monitor] Metrics updated:
[INFO] 00:25:15 Restarting: /home/komail/LEAF/Learn-X/app/backend/src/agents/codegenV3.ts has been modified

══════════════════════════════════════════════════════════════════════
🚀 LEARN-X BACKEND STARTING
══════════════════════════════════════════════════════════════════════
📍 Configuration:
   PORT: 8000
   FRONTEND_URLS: http://localhost:5173, http://localhost:5174
   REDIS_URL: redis://localhost:6379
   GEMINI_API_KEY: ✅ SET
   USE_VISUAL_VERSION: v3
   LOG_LEVEL: debug
══════════════════════════════════════════════════════════════════════

🔌 Connecting to Redis...
🎭 Initializing orchestrator...
🧹 Clearing stale job queues on startup...
2025-10-11T19:25:15.737Z [debug] NEW Plan worker created
2025-10-11T19:25:15.738Z [debug] NEW Gen worker created
2025-10-11T19:25:15.738Z [debug] NEW Parallel worker created
✅ Orchestrator initialized


══════════════════════════════════════════════════════════════════════
✅ SERVER READY
══════════════════════════════════════════════════════════════════════
🌐 Backend URL: http://localhost:8000
🔗 Health Check: http://localhost:8000/health
📡 WebSocket Ready: ws://localhost:8000
══════════════════════════════════════════════════════════════════════

2025-10-11T19:25:15.741Z [debug] Server listening on port 8000
✅ Redis connected
It is highly recommended to use a minimum Redis version of 6.2.0
             Current: 6.0.16
It is highly recommended to use a minimum Redis version of 6.2.0
             Current: 6.0.16
It is highly recommended to use a minimum Redis version of 6.2.0
             Current: 6.0.16
It is highly recommended to use a minimum Redis version of 6.2.0
             Current: 6.0.16
It is highly recommended to use a minimum Redis version of 6.2.0
             Current: 6.0.16
It is highly recommended to use a minimum Redis version of 6.2.0
             Current: 6.0.16
It is highly recommended to use a minimum Redis version of 6.2.0
             Current: 6.0.16
It is highly recommended to use a minimum Redis version of 6.2.0
             Current: 6.0.16
It is highly recommended to use a minimum Redis version of 6.2.0
             Current: 6.0.16
[INFO] 00:25:50 Restarting: /home/komail/LEAF/Learn-X/app/backend/src/agents/codegenV3.ts has been modified
2025-10-11T19:25:50.356Z [debug] Shutting down server...
2025-10-11T19:25:50.356Z [debug] Server shut down.

══════════════════════════════════════════════════════════════════════
🚀 LEARN-X BACKEND STARTING
══════════════════════════════════════════════════════════════════════
📍 Configuration:
   PORT: 8000
   FRONTEND_URLS: http://localhost:5173, http://localhost:5174
   REDIS_URL: redis://localhost:6379
   GEMINI_API_KEY: ✅ SET
   USE_VISUAL_VERSION: v3
   LOG_LEVEL: debug
══════════════════════════════════════════════════════════════════════

🔌 Connecting to Redis...
🎭 Initializing orchestrator...
🧹 Clearing stale job queues on startup...
2025-10-11T19:25:50.524Z [debug] NEW Plan worker created
2025-10-11T19:25:50.525Z [debug] NEW Gen worker created
2025-10-11T19:25:50.525Z [debug] NEW Parallel worker created
✅ Orchestrator initialized

Error: listen EADDRINUSE: address already in use :::8000
    at Server.setupListenHandle [as _listen2] (node:net:1817:16)
    at listenInCluster (node:net:1865:12)
    at Server.listen (node:net:1953:7)
    at main (/home/komail/LEAF/Learn-X/app/backend/src/index.ts:294:10)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
[ERROR] 00:25:50 Error: listen EADDRINUSE: address already in use :::8000
✅ Redis connected
2025-10-11T19:25:50.537Z [debug] Shutting down server...
2025-10-11T19:25:50.537Z [debug] Server shut down.
[INFO] 00:39:14 Restarting: /home/komail/LEAF/Learn-X/app/backend/src/agents/codegenV3.ts has been modified

══════════════════════════════════════════════════════════════════════
🚀 LEARN-X BACKEND STARTING
══════════════════════════════════════════════════════════════════════
📍 Configuration:
   PORT: 8000
   FRONTEND_URLS: http://localhost:5173, http://localhost:5174
   REDIS_URL: redis://localhost:6379
   GEMINI_API_KEY: ✅ SET
   USE_VISUAL_VERSION: v3
   LOG_LEVEL: debug
══════════════════════════════════════════════════════════════════════

🔌 Connecting to Redis...
🎭 Initializing orchestrator...
🧹 Clearing stale job queues on startup...
2025-10-11T19:39:15.058Z [debug] NEW Plan worker created
2025-10-11T19:39:15.058Z [debug] NEW Gen worker created
2025-10-11T19:39:15.058Z [debug] NEW Parallel worker created
✅ Orchestrator initialized

Error: listen EADDRINUSE: address already in use :::8000
    at Server.setupListenHandle [as _listen2] (node:net:1817:16)
    at listenInCluster (node:net:1865:12)
    at Server.listen (node:net:1953:7)
    at main (/home/komail/LEAF/Learn-X/app/backend/src/index.ts:294:10)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
[ERROR] 00:39:15 Error: listen EADDRINUSE: address already in use :::8000
✅ Redis connected
2025-10-11T19:39:15.070Z [debug] Shutting down server...
2025-10-11T19:39:15.070Z [debug] Server shut down.
[INFO] 00:58:58 Restarting: /home/komail/LEAF/Learn-X/app/backend/src/agents/codegenV3.ts has been modified

══════════════════════════════════════════════════════════════════════
🚀 LEARN-X BACKEND STARTING
══════════════════════════════════════════════════════════════════════
📍 Configuration:
   PORT: 8000
   FRONTEND_URLS: http://localhost:5173, http://localhost:5174
   REDIS_URL: redis://localhost:6379
   GEMINI_API_KEY: ✅ SET
   USE_VISUAL_VERSION: v3
   LOG_LEVEL: debug
══════════════════════════════════════════════════════════════════════

🔌 Connecting to Redis...
🎭 Initializing orchestrator...
🧹 Clearing stale job queues on startup...
2025-10-11T19:58:58.281Z [debug] NEW Plan worker created
2025-10-11T19:58:58.282Z [debug] NEW Gen worker created
2025-10-11T19:58:58.282Z [debug] NEW Parallel worker created
✅ Orchestrator initialized

Error: listen EADDRINUSE: address already in use :::8000
    at Server.setupListenHandle [as _listen2] (node:net:1817:16)
    at listenInCluster (node:net:1865:12)
    at Server.listen (node:net:1953:7)
    at main (/home/komail/LEAF/Learn-X/app/backend/src/index.ts:294:10)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
[ERROR] 00:58:58 Error: listen EADDRINUSE: address already in use :::8000
✅ Redis connected
2025-10-11T19:58:58.300Z [debug] Shutting down server...
2025-10-11T19:58:58.301Z [debug] Server shut down.
[INFO] 00:59:46 Restarting: /home/komail/LEAF/Learn-X/app/backend/src/agents/codegenV3.ts has been modified

══════════════════════════════════════════════════════════════════════
🚀 LEARN-X BACKEND STARTING
══════════════════════════════════════════════════════════════════════
📍 Configuration:
   PORT: 8000
   FRONTEND_URLS: http://localhost:5173, http://localhost:5174
   REDIS_URL: redis://localhost:6379
   GEMINI_API_KEY: ✅ SET
   USE_VISUAL_VERSION: v3
   LOG_LEVEL: debug
══════════════════════════════════════════════════════════════════════

🔌 Connecting to Redis...
🎭 Initializing orchestrator...
🧹 Clearing stale job queues on startup...
2025-10-11T19:59:46.855Z [debug] NEW Plan worker created
2025-10-11T19:59:46.856Z [debug] NEW Gen worker created
2025-10-11T19:59:46.856Z [debug] NEW Parallel worker created
✅ Orchestrator initialized

Error: listen EADDRINUSE: address already in use :::8000
    at Server.setupListenHandle [as _listen2] (node:net:1817:16)
    at listenInCluster (node:net:1865:12)
    at Server.listen (node:net:1953:7)
    at main (/home/komail/LEAF/Learn-X/app/backend/src/index.ts:294:10)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
[ERROR] 00:59:46 Error: listen EADDRINUSE: address already in use :::8000
✅ Redis connected
2025-10-11T19:59:46.868Z [debug] Shutting down server...
2025-10-11T19:59:46.868Z [debug] Server shut down.
[INFO] 01:00:57 Restarting: /home/komail/LEAF/Learn-X/app/backend/src/agents/codegenV3.ts has been modified

══════════════════════════════════════════════════════════════════════
🚀 LEARN-X BACKEND STARTING
══════════════════════════════════════════════════════════════════════
📍 Configuration:
   PORT: 8000
   FRONTEND_URLS: http://localhost:5173, http://localhost:5174
   REDIS_URL: redis://localhost:6379
   GEMINI_API_KEY: ✅ SET
   USE_VISUAL_VERSION: v3
   LOG_LEVEL: debug
══════════════════════════════════════════════════════════════════════

🔌 Connecting to Redis...
🎭 Initializing orchestrator...
🧹 Clearing stale job queues on startup...
2025-10-11T20:00:57.965Z [debug] NEW Plan worker created
2025-10-11T20:00:57.965Z [debug] NEW Gen worker created
2025-10-11T20:00:57.965Z [debug] NEW Parallel worker created
✅ Orchestrator initialized

Error: listen EADDRINUSE: address already in use :::8000
    at Server.setupListenHandle [as _listen2] (node:net:1817:16)
    at listenInCluster (node:net:1865:12)
    at Server.listen (node:net:1953:7)
    at main (/home/komail/LEAF/Learn-X/app/backend/src/index.ts:294:10)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
[ERROR] 01:00:57 Error: listen EADDRINUSE: address already in use :::8000
✅ Redis connected
2025-10-11T20:00:57.977Z [debug] Shutting down server...
2025-10-11T20:00:57.977Z [debug] Server shut down.
[INFO] 10:31:28 Restarting: /home/komail/LEAF/Learn-X/app/backend/src/agents/codegenV3.ts has been modified

══════════════════════════════════════════════════════════════════════
🚀 LEARN-X BACKEND STARTING
══════════════════════════════════════════════════════════════════════
📍 Configuration:
   PORT: 8000
   FRONTEND_URLS: http://localhost:5173, http://localhost:5174
   REDIS_URL: redis://localhost:6379
   GEMINI_API_KEY: ✅ SET
   USE_VISUAL_VERSION: v3
   LOG_LEVEL: debug
══════════════════════════════════════════════════════════════════════

🔌 Connecting to Redis...
🎭 Initializing orchestrator...
🧹 Clearing stale job queues on startup...
2025-10-12T05:31:28.637Z [debug] NEW Plan worker created
2025-10-12T05:31:28.637Z [debug] NEW Gen worker created
2025-10-12T05:31:28.637Z [debug] NEW Parallel worker created
✅ Orchestrator initialized


══════════════════════════════════════════════════════════════════════
✅ SERVER READY
══════════════════════════════════════════════════════════════════════
🌐 Backend URL: http://localhost:8000
🔗 Health Check: http://localhost:8000/health
📡 WebSocket Ready: ws://localhost:8000
══════════════════════════════════════════════════════════════════════

2025-10-12T05:31:28.641Z [debug] Server listening on port 8000
✅ Redis connected
It is highly recommended to use a minimum Redis version of 6.2.0
             Current: 6.0.16
It is highly recommended to use a minimum Redis version of 6.2.0
             Current: 6.0.16
It is highly recommended to use a minimum Redis version of 6.2.0
             Current: 6.0.16
It is highly recommended to use a minimum Redis version of 6.2.0
             Current: 6.0.16
It is highly recommended to use a minimum Redis version of 6.2.0
             Current: 6.0.16
It is highly recommended to use a minimum Redis version of 6.2.0
             Current: 6.0.16
It is highly recommended to use a minimum Redis version of 6.2.0
             Current: 6.0.16
It is highly recommended to use a minimum Redis version of 6.2.0
             Current: 6.0.16
It is highly recommended to use a minimum Redis version of 6.2.0
             Current: 6.0.16
[INFO] 10:31:57 Restarting: /home/komail/LEAF/Learn-X/app/backend/src/orchestrator.ts has been modified
2025-10-12T05:31:57.348Z [debug] Shutting down server...
2025-10-12T05:31:57.348Z [debug] Server shut down.

══════════════════════════════════════════════════════════════════════
🚀 LEARN-X BACKEND STARTING
══════════════════════════════════════════════════════════════════════
📍 Configuration:
   PORT: 8000
   FRONTEND_URLS: http://localhost:5173, http://localhost:5174
   REDIS_URL: redis://localhost:6379
   GEMINI_API_KEY: ✅ SET
   USE_VISUAL_VERSION: v3
   LOG_LEVEL: debug
══════════════════════════════════════════════════════════════════════

🔌 Connecting to Redis...
🎭 Initializing orchestrator...
🧹 Clearing stale job queues on startup...
2025-10-12T05:31:57.544Z [debug] NEW Plan worker created
2025-10-12T05:31:57.545Z [debug] NEW Gen worker created
2025-10-12T05:31:57.545Z [debug] NEW Parallel worker created
✅ Orchestrator initialized

Error: listen EADDRINUSE: address already in use :::8000
    at Server.setupListenHandle [as _listen2] (node:net:1817:16)
    at listenInCluster (node:net:1865:12)
    at Server.listen (node:net:1953:7)
    at main (/home/komail/LEAF/Learn-X/app/backend/src/index.ts:294:10)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
[ERROR] 10:31:57 Error: listen EADDRINUSE: address already in use :::8000
✅ Redis connected
2025-10-12T05:31:57.556Z [debug] Shutting down server...
2025-10-12T05:31:57.557Z [debug] Server shut down.
[INFO] 10:32:16 Restarting: /home/komail/LEAF/Learn-X/app/backend/src/agents/codegenV3WithRetry.ts has been modified

══════════════════════════════════════════════════════════════════════
🚀 LEARN-X BACKEND STARTING
══════════════════════════════════════════════════════════════════════
📍 Configuration:
   PORT: 8000
   FRONTEND_URLS: http://localhost:5173, http://localhost:5174
   REDIS_URL: redis://localhost:6379
   GEMINI_API_KEY: ✅ SET
   USE_VISUAL_VERSION: v3
   LOG_LEVEL: debug
══════════════════════════════════════════════════════════════════════

🔌 Connecting to Redis...
🎭 Initializing orchestrator...
🧹 Clearing stale job queues on startup...
2025-10-12T05:32:16.985Z [debug] NEW Plan worker created
2025-10-12T05:32:16.985Z [debug] NEW Gen worker created
2025-10-12T05:32:16.985Z [debug] NEW Parallel worker created
✅ Orchestrator initialized

Error: listen EADDRINUSE: address already in use :::8000
    at Server.setupListenHandle [as _listen2] (node:net:1817:16)
    at listenInCluster (node:net:1865:12)
    at Server.listen (node:net:1953:7)
    at main (/home/komail/LEAF/Learn-X/app/backend/src/index.ts:294:10)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
[ERROR] 10:32:16 Error: listen EADDRINUSE: address already in use :::8000
✅ Redis connected
2025-10-12T05:32:16.997Z [debug] Shutting down server...
2025-10-12T05:32:16.997Z [debug] Server shut down.
[INFO] 10:32:25 Restarting: /home/komail/LEAF/Learn-X/app/backend/src/agents/codegenV3WithRetry.ts has been modified

══════════════════════════════════════════════════════════════════════
🚀 LEARN-X BACKEND STARTING
══════════════════════════════════════════════════════════════════════
📍 Configuration:
   PORT: 8000
   FRONTEND_URLS: http://localhost:5173, http://localhost:5174
   REDIS_URL: redis://localhost:6379
   GEMINI_API_KEY: ✅ SET
   USE_VISUAL_VERSION: v3
   LOG_LEVEL: debug
══════════════════════════════════════════════════════════════════════

🔌 Connecting to Redis...
🎭 Initializing orchestrator...
🧹 Clearing stale job queues on startup...
2025-10-12T05:32:26.029Z [debug] NEW Plan worker created
2025-10-12T05:32:26.030Z [debug] NEW Gen worker created
2025-10-12T05:32:26.030Z [debug] NEW Parallel worker created
✅ Orchestrator initialized

Error: listen EADDRINUSE: address already in use :::8000
    at Server.setupListenHandle [as _listen2] (node:net:1817:16)
    at listenInCluster (node:net:1865:12)
    at Server.listen (node:net:1953:7)
    at main (/home/komail/LEAF/Learn-X/app/backend/src/index.ts:294:10)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
[ERROR] 10:32:26 Error: listen EADDRINUSE: address already in use :::8000
✅ Redis connected
2025-10-12T05:32:26.041Z [debug] Shutting down server...
2025-10-12T05:32:26.042Z [debug] Server shut down.
[INFO] 10:32:35 Restarting: /home/komail/LEAF/Learn-X/app/backend/src/agents/codegenV3WithRetry.ts has been modified

══════════════════════════════════════════════════════════════════════
🚀 LEARN-X BACKEND STARTING
══════════════════════════════════════════════════════════════════════
📍 Configuration:
   PORT: 8000
   FRONTEND_URLS: http://localhost:5173, http://localhost:5174
   REDIS_URL: redis://localhost:6379
   GEMINI_API_KEY: ✅ SET
   USE_VISUAL_VERSION: v3
   LOG_LEVEL: debug
══════════════════════════════════════════════════════════════════════

🔌 Connecting to Redis...
🎭 Initializing orchestrator...
🧹 Clearing stale job queues on startup...
2025-10-12T05:32:35.927Z [debug] NEW Plan worker created
2025-10-12T05:32:35.927Z [debug] NEW Gen worker created
2025-10-12T05:32:35.927Z [debug] NEW Parallel worker created
✅ Orchestrator initialized

Error: listen EADDRINUSE: address already in use :::8000
    at Server.setupListenHandle [as _listen2] (node:net:1817:16)
    at listenInCluster (node:net:1865:12)
    at Server.listen (node:net:1953:7)
    at main (/home/komail/LEAF/Learn-X/app/backend/src/index.ts:294:10)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
[ERROR] 10:32:35 Error: listen EADDRINUSE: address already in use :::8000
✅ Redis connected
2025-10-12T05:32:35.939Z [debug] Shutting down server...
2025-10-12T05:32:35.939Z [debug] Server shut down.
[INFO] 10:58:37 Restarting: /home/komail/LEAF/Learn-X/app/backend/src/agents/codegenV3.ts has been modified

══════════════════════════════════════════════════════════════════════
🚀 LEARN-X BACKEND STARTING
══════════════════════════════════════════════════════════════════════
📍 Configuration:
   PORT: 8000
   FRONTEND_URLS: http://localhost:5173, http://localhost:5174
   REDIS_URL: redis://localhost:6379
   GEMINI_API_KEY: ✅ SET
   USE_VISUAL_VERSION: v3
   LOG_LEVEL: debug
══════════════════════════════════════════════════════════════════════

🔌 Connecting to Redis...
🎭 Initializing orchestrator...
🧹 Clearing stale job queues on startup...
2025-10-12T05:58:37.425Z [debug] NEW Plan worker created
2025-10-12T05:58:37.426Z [debug] NEW Gen worker created
2025-10-12T05:58:37.426Z [debug] NEW Parallel worker created
✅ Orchestrator initialized

Error: listen EADDRINUSE: address already in use :::8000
    at Server.setupListenHandle [as _listen2] (node:net:1817:16)
    at listenInCluster (node:net:1865:12)
    at Server.listen (node:net:1953:7)
    at main (/home/komail/LEAF/Learn-X/app/backend/src/index.ts:294:10)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
[ERROR] 10:58:37 Error: listen EADDRINUSE: address already in use :::8000
✅ Redis connected
2025-10-12T05:58:37.437Z [debug] Shutting down server...
2025-10-12T05:58:37.438Z [debug] Server shut down.
[INFO] 11:00:47 Restarting: /home/komail/LEAF/Learn-X/app/backend/src/agents/visual.ts has been modified

══════════════════════════════════════════════════════════════════════
🚀 LEARN-X BACKEND STARTING
══════════════════════════════════════════════════════════════════════
📍 Configuration:
   PORT: 8000
   FRONTEND_URLS: http://localhost:5173, http://localhost:5174
   REDIS_URL: redis://localhost:6379
   GEMINI_API_KEY: ✅ SET
   USE_VISUAL_VERSION: v3
   LOG_LEVEL: debug
══════════════════════════════════════════════════════════════════════

🔌 Connecting to Redis...
🎭 Initializing orchestrator...
🧹 Clearing stale job queues on startup...
2025-10-12T06:00:47.912Z [debug] NEW Plan worker created
2025-10-12T06:00:47.913Z [debug] NEW Gen worker created
2025-10-12T06:00:47.913Z [debug] NEW Parallel worker created
✅ Orchestrator initialized

Error: listen EADDRINUSE: address already in use :::8000
    at Server.setupListenHandle [as _listen2] (node:net:1817:16)
    at listenInCluster (node:net:1865:12)
    at Server.listen (node:net:1953:7)
    at main (/home/komail/LEAF/Learn-X/app/backend/src/index.ts:294:10)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
[ERROR] 11:00:47 Error: listen EADDRINUSE: address already in use :::8000
✅ Redis connected
2025-10-12T06:00:47.925Z [debug] Shutting down server...
2025-10-12T06:00:47.925Z [debug] Server shut down.
[INFO] 11:12:18 Restarting: /home/komail/LEAF/Learn-X/app/backend/src/agents/planner.ts has been modified

══════════════════════════════════════════════════════════════════════
🚀 LEARN-X BACKEND STARTING
══════════════════════════════════════════════════════════════════════
📍 Configuration:
   PORT: 8000
   FRONTEND_URLS: http://localhost:5173, http://localhost:5174
   REDIS_URL: redis://localhost:6379
   GEMINI_API_KEY: ✅ SET
   USE_VISUAL_VERSION: v3
   LOG_LEVEL: debug
══════════════════════════════════════════════════════════════════════

🔌 Connecting to Redis...
🎭 Initializing orchestrator...
🧹 Clearing stale job queues on startup...
2025-10-12T06:12:18.278Z [debug] NEW Plan worker created
2025-10-12T06:12:18.279Z [debug] NEW Gen worker created
2025-10-12T06:12:18.279Z [debug] NEW Parallel worker created
✅ Orchestrator initialized

Error: listen EADDRINUSE: address already in use :::8000
    at Server.setupListenHandle [as _listen2] (node:net:1817:16)
    at listenInCluster (node:net:1865:12)
    at Server.listen (node:net:1953:7)
    at main (/home/komail/LEAF/Learn-X/app/backend/src/index.ts:294:10)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
[ERROR] 11:12:18 Error: listen EADDRINUSE: address already in use :::8000
✅ Redis connected
2025-10-12T06:12:18.293Z [debug] Shutting down server...
2025-10-12T06:12:18.293Z [debug] Server shut down.
